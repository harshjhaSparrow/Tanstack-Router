/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StatusStatusImport } from './routes/_status/status'
import { Route as PostsPostsImport } from './routes/_posts/posts'
import { Route as Layout1Layout1Import } from './routes/_layout1/_layout1'
import { Route as AboutAboutImport } from './routes/_about/about'
import { Route as Layout1UserRouteImport } from './routes/_layout1/user/route'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const StatusStatusRoute = StatusStatusImport.update({
  path: '/status',
  getParentRoute: () => rootRoute,
} as any)

const PostsPostsRoute = PostsPostsImport.update({
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const Layout1Layout1Route = Layout1Layout1Import.update({
  id: '/_layout1/_layout1',
  getParentRoute: () => rootRoute,
} as any)

const AboutAboutRoute = AboutAboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const Layout1UserRouteRoute = Layout1UserRouteImport.update({
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout1/user': {
      id: '/_layout1/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof Layout1UserRouteImport
      parentRoute: typeof rootRoute
    }
    '/_about/about': {
      id: '/_about/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutAboutImport
      parentRoute: typeof rootRoute
    }
    '/_layout1/_layout1': {
      id: '/_layout1/_layout1'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Layout1Layout1Import
      parentRoute: typeof rootRoute
    }
    '/_posts/posts': {
      id: '/_posts/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsPostsImport
      parentRoute: typeof rootRoute
    }
    '/_status/status': {
      id: '/_status/status'
      path: '/status'
      fullPath: '/status'
      preLoaderRoute: typeof StatusStatusImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  Layout1UserRouteRoute,
  AboutAboutRoute,
  PostsPostsRoute,
  StatusStatusRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout1/user",
        "/_about/about",
        "/_layout1/_layout1",
        "/_posts/posts",
        "/_status/status"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_layout1/user": {
      "filePath": "_layout1/user/route.tsx"
    },
    "/_about/about": {
      "filePath": "_about/about.tsx"
    },
    "/_layout1/_layout1": {
      "filePath": "_layout1/_layout1.tsx"
    },
    "/_posts/posts": {
      "filePath": "_posts/posts.tsx"
    },
    "/_status/status": {
      "filePath": "_status/status.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
